/*
    El Grinch est√° abriendo las cartas que iban a Santa Claus y las est√° dejando hechas 
    un l√≠o. üò±
    
    - Las cartas son una cadena de texto que incluyen regalos y par√©ntesis ().
    - Para saber si una carta es v√°lida ‚úÖ, debes comprobar que los par√©ntesis cierran 
    correctamente y que, adem√°s, no vayan vac√≠os.
    
    ¬°Pero ojo! Porque el Grinch ha dejado llaves { y corchetes [ dentro de los par√©ntesis 
    que hacen que no sean v√°lidas. Por suerte s√≥lo los ha dejado en medio de los 
    par√©ntesis...

    Ejemplos:
    "bici coche (bal√≥n) bici coche peluche" // -> ‚úÖ
    "(mu√±eca) consola bici" // ‚úÖ

    "bici coche (bal√≥n bici coche" // -> ‚ùå
    "peluche (bici [coche) bici coche bal√≥n" // -> ‚ùå
    "(peluche {) bici" // -> ‚ùå
    "() bici" // ‚ùå
*/

export default function isValid(mail) {
    // ¬°No dejes que el Grinch gane!

    const checkParenthesis = letter => {
        if (letter[0] === '(' && letter[letter.length -1] === ')' && letter.length > 2){
            let newLetter = letter.split('');
            newLetter.shift();
            newLetter.pop();
            newLetter = newLetter.join('');
            return checkParenthesis(newLetter);
        }
        else if (/^[a-zA-Z√Ä-√ø\u00f1\u00d1]+$/.test(letter)){
            return true;
        }
        return false;
    }

    return mail
        .split(' ')
        .map(letter => checkParenthesis(letter))
        .reduce((sum, next) => sum && next, true);
}

console.log(isValid("bici coche (bal√≥n) bici coche peluche")); //true
console.log(isValid("(sd) consola bici mu√±eca")); //true
console.log(isValid('(((a)))')); // true

console.log(isValid("bici coche (bal√≥n bici coche")); //false
console.log(isValid("peluche (bici [coche) bici coche bal√≥n")); //false
console.log(isValid("(peluche {) bici")); //false
console.log(isValid("() bici")); //false
